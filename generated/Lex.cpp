
// Generated from Lex.g4 by ANTLR 4.12.0


#include "Lex.h"


using namespace antlr4;


using namespace antlr4;

namespace {

    struct LexStaticData final {
        LexStaticData(std::vector<std::string> ruleNames,
                      std::vector<std::string> channelNames,
                      std::vector<std::string> modeNames,
                      std::vector<std::string> literalNames,
                      std::vector<std::string> symbolicNames)
                : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
                  modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
                  symbolicNames(std::move(symbolicNames)),
                  vocabulary(this->literalNames, this->symbolicNames) {}

        LexStaticData(const LexStaticData &) = delete;

        LexStaticData(LexStaticData &&) = delete;

        LexStaticData &operator=(const LexStaticData &) = delete;

        LexStaticData &operator=(LexStaticData &&) = delete;

        std::vector<antlr4::dfa::DFA> decisionToDFA;
        antlr4::atn::PredictionContextCache sharedContextCache;
        const std::vector<std::string> ruleNames;
        const std::vector<std::string> channelNames;
        const std::vector<std::string> modeNames;
        const std::vector<std::string> literalNames;
        const std::vector<std::string> symbolicNames;
        const antlr4::dfa::Vocabulary vocabulary;
        antlr4::atn::SerializedATNView serializedATN;
        std::unique_ptr<antlr4::atn::ATN> atn;
    };

    ::antlr4::internal::OnceFlag lexLexerOnceFlag;
    LexStaticData *lexLexerStaticData = nullptr;

    void lexLexerInitialize() {
        assert(lexLexerStaticData == nullptr);
        auto staticData = std::make_unique<LexStaticData>(
                std::vector<std::string>{
                        "COMMENT_TOKEN", "SPACE", "KW_Int", "KW_Float", "KW_Void", "KW_Const",
                        "KW_Return", "KW_If", "KW_Else", "KW_For", "KW_While", "KW_Do", "KW_Break",
                        "KW_Continue", "Lparen", "Rparen", "Lbarck", "Rbarck", "Lbrace", "Rbrace",
                        "Comma", "Semi", "Ques", "Colon", "Minus", "Point", "Tilde", "Add",
                        "Mul", "Div", "Mode", "LAND", "LOR", "EQ", "NEQ", "LT", "LE", "GT",
                        "GE", "Int", "Ident", "STRING", "ESC", "Float", "DecimalFloatingConstant",
                        "HexadecimalFloatingConstant", "FractionalConstant", "ExponentPart",
                        "Sign", "HexadecimalFractionalConstant", "BinaryExponentPart"
                },
                std::vector<std::string>{
                        "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
                },
                std::vector<std::string>{
                        "DEFAULT_MODE"
                },
                std::vector<std::string>{
                        "", "", "", "'int'", "'float'", "'void'", "'const'", "'return'", "'if'",
                        "'else'", "'for'", "'while'", "'do'", "'break'", "'continue'", "'('",
                        "')'", "'['", "']'", "'{'", "'}'", "','", "';'", "'\\u003F'", "':'",
                        "'-'", "'!'", "'~'", "'+'", "'*'", "'/'", "'%'", "'&&'", "'||'", "'=='",
                        "'!='", "'<'", "'<='", "'>'", "'>='"
                },
                std::vector<std::string>{
                        "", "COMMENT_TOKEN", "SPACE", "KW_Int", "KW_Float", "KW_Void", "KW_Const",
                        "KW_Return", "KW_If", "KW_Else", "KW_For", "KW_While", "KW_Do", "KW_Break",
                        "KW_Continue", "Lparen", "Rparen", "Lbarck", "Rbarck", "Lbrace", "Rbrace",
                        "Comma", "Semi", "Ques", "Colon", "Minus", "Point", "Tilde", "Add",
                        "Mul", "Div", "Mode", "LAND", "LOR", "EQ", "NEQ", "LT", "LE", "GT",
                        "GE", "Int", "Ident", "STRING", "Float"
                }
        );
        static const int32_t serializedATNSegment[] = {
                4, 0, 43, 426, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7,
                6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14,
                7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21,
                7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28,
                7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35,
                7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42,
                7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49,
                7, 49, 2, 50, 7, 50, 1, 0, 1, 0, 1, 0, 1, 0, 5, 0, 108, 8, 0, 10, 0, 12, 0, 111, 9, 0, 1, 0, 3, 0,
                114, 8, 0, 1, 0, 1, 0, 3, 0, 118, 8, 0, 1, 0, 1, 0, 1, 0, 1, 0, 5, 0, 124, 8, 0, 10, 0, 12, 0, 127,
                9, 0, 1, 0, 1, 0, 3, 0, 131, 8, 0, 1, 1, 4, 1, 134, 8, 1, 11, 1, 12, 1, 135, 1, 1, 1, 1, 1, 2, 1, 2,
                1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1,
                5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9,
                1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1,
                12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1,
                14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1,
                21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1,
                28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1,
                34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 4,
                39, 261, 8, 39, 11, 39, 12, 39, 262, 1, 39, 1, 39, 1, 39, 1, 39, 4, 39, 269, 8, 39, 11, 39, 12,
                39, 270, 1, 39, 1, 39, 1, 39, 1, 39, 4, 39, 277, 8, 39, 11, 39, 12, 39, 278, 3, 39, 281, 8, 39,
                1, 40, 1, 40, 5, 40, 285, 8, 40, 10, 40, 12, 40, 288, 9, 40, 1, 41, 1, 41, 1, 41, 5, 41, 293,
                8, 41, 10, 41, 12, 41, 296, 9, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 3, 42, 304, 8, 42,
                1, 43, 1, 43, 3, 43, 308, 8, 43, 1, 44, 1, 44, 3, 44, 312, 8, 44, 1, 44, 4, 44, 315, 8, 44, 11,
                44, 12, 44, 316, 1, 44, 3, 44, 320, 8, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1,
                45, 1, 45, 1, 45, 4, 45, 332, 8, 45, 11, 45, 12, 45, 333, 1, 45, 3, 45, 337, 8, 45, 1, 46, 4,
                46, 340, 8, 46, 11, 46, 12, 46, 341, 1, 46, 1, 46, 4, 46, 346, 8, 46, 11, 46, 12, 46, 347, 1,
                46, 4, 46, 351, 8, 46, 11, 46, 12, 46, 352, 1, 46, 1, 46, 1, 46, 4, 46, 358, 8, 46, 11, 46, 12,
                46, 359, 3, 46, 362, 8, 46, 1, 47, 1, 47, 3, 47, 366, 8, 47, 1, 47, 4, 47, 369, 8, 47, 11, 47,
                12, 47, 370, 1, 47, 1, 47, 3, 47, 375, 8, 47, 1, 47, 4, 47, 378, 8, 47, 11, 47, 12, 47, 379,
                3, 47, 382, 8, 47, 1, 48, 1, 48, 1, 49, 4, 49, 387, 8, 49, 11, 49, 12, 49, 388, 1, 49, 1, 49,
                4, 49, 393, 8, 49, 11, 49, 12, 49, 394, 1, 49, 4, 49, 398, 8, 49, 11, 49, 12, 49, 399, 1, 49,
                1, 49, 1, 49, 4, 49, 405, 8, 49, 11, 49, 12, 49, 406, 3, 49, 409, 8, 49, 1, 50, 1, 50, 1, 50,
                4, 50, 414, 8, 50, 11, 50, 12, 50, 415, 1, 50, 1, 50, 1, 50, 4, 50, 421, 8, 50, 11, 50, 12, 50,
                422, 3, 50, 425, 8, 50, 3, 109, 125, 294, 0, 51, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15,
                8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39,
                20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31,
                63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85,
                0, 87, 43, 89, 0, 91, 0, 93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 1, 0, 6, 3, 0, 9, 10, 13, 13, 32, 32,
                1, 0, 48, 57, 3, 0, 48, 57, 65, 70, 97, 102, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65,
                90, 95, 95, 97, 122, 2, 0, 43, 43, 45, 45, 458, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0,
                0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17,
                1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0,
                0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0,
                0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49,
                1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0,
                0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0,
                0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81,
                1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 1, 130, 1, 0, 0, 0, 3, 133, 1, 0, 0, 0, 5, 139, 1,
                0, 0, 0, 7, 143, 1, 0, 0, 0, 9, 149, 1, 0, 0, 0, 11, 154, 1, 0, 0, 0, 13, 160, 1, 0, 0, 0, 15, 167,
                1, 0, 0, 0, 17, 170, 1, 0, 0, 0, 19, 175, 1, 0, 0, 0, 21, 179, 1, 0, 0, 0, 23, 185, 1, 0, 0, 0, 25,
                188, 1, 0, 0, 0, 27, 194, 1, 0, 0, 0, 29, 203, 1, 0, 0, 0, 31, 205, 1, 0, 0, 0, 33, 207, 1, 0, 0,
                0, 35, 209, 1, 0, 0, 0, 37, 211, 1, 0, 0, 0, 39, 213, 1, 0, 0, 0, 41, 215, 1, 0, 0, 0, 43, 217,
                1, 0, 0, 0, 45, 219, 1, 0, 0, 0, 47, 221, 1, 0, 0, 0, 49, 223, 1, 0, 0, 0, 51, 225, 1, 0, 0, 0, 53,
                227, 1, 0, 0, 0, 55, 229, 1, 0, 0, 0, 57, 231, 1, 0, 0, 0, 59, 233, 1, 0, 0, 0, 61, 235, 1, 0, 0,
                0, 63, 237, 1, 0, 0, 0, 65, 240, 1, 0, 0, 0, 67, 243, 1, 0, 0, 0, 69, 246, 1, 0, 0, 0, 71, 249,
                1, 0, 0, 0, 73, 251, 1, 0, 0, 0, 75, 254, 1, 0, 0, 0, 77, 256, 1, 0, 0, 0, 79, 280, 1, 0, 0, 0, 81,
                282, 1, 0, 0, 0, 83, 289, 1, 0, 0, 0, 85, 303, 1, 0, 0, 0, 87, 307, 1, 0, 0, 0, 89, 319, 1, 0, 0,
                0, 91, 336, 1, 0, 0, 0, 93, 361, 1, 0, 0, 0, 95, 381, 1, 0, 0, 0, 97, 383, 1, 0, 0, 0, 99, 408,
                1, 0, 0, 0, 101, 424, 1, 0, 0, 0, 103, 104, 5, 47, 0, 0, 104, 105, 5, 47, 0, 0, 105, 109, 1, 0,
                0, 0, 106, 108, 9, 0, 0, 0, 107, 106, 1, 0, 0, 0, 108, 111, 1, 0, 0, 0, 109, 110, 1, 0, 0, 0, 109,
                107, 1, 0, 0, 0, 110, 117, 1, 0, 0, 0, 111, 109, 1, 0, 0, 0, 112, 114, 5, 13, 0, 0, 113, 112,
                1, 0, 0, 0, 113, 114, 1, 0, 0, 0, 114, 115, 1, 0, 0, 0, 115, 118, 5, 10, 0, 0, 116, 118, 5, 0,
                0, 1, 117, 113, 1, 0, 0, 0, 117, 116, 1, 0, 0, 0, 118, 131, 1, 0, 0, 0, 119, 120, 5, 47, 0, 0,
                120, 121, 5, 42, 0, 0, 121, 125, 1, 0, 0, 0, 122, 124, 9, 0, 0, 0, 123, 122, 1, 0, 0, 0, 124,
                127, 1, 0, 0, 0, 125, 126, 1, 0, 0, 0, 125, 123, 1, 0, 0, 0, 126, 128, 1, 0, 0, 0, 127, 125, 1,
                0, 0, 0, 128, 129, 5, 42, 0, 0, 129, 131, 5, 47, 0, 0, 130, 103, 1, 0, 0, 0, 130, 119, 1, 0, 0,
                0, 131, 2, 1, 0, 0, 0, 132, 134, 7, 0, 0, 0, 133, 132, 1, 0, 0, 0, 134, 135, 1, 0, 0, 0, 135, 133,
                1, 0, 0, 0, 135, 136, 1, 0, 0, 0, 136, 137, 1, 0, 0, 0, 137, 138, 6, 1, 0, 0, 138, 4, 1, 0, 0, 0,
                139, 140, 5, 105, 0, 0, 140, 141, 5, 110, 0, 0, 141, 142, 5, 116, 0, 0, 142, 6, 1, 0, 0, 0, 143,
                144, 5, 102, 0, 0, 144, 145, 5, 108, 0, 0, 145, 146, 5, 111, 0, 0, 146, 147, 5, 97, 0, 0, 147,
                148, 5, 116, 0, 0, 148, 8, 1, 0, 0, 0, 149, 150, 5, 118, 0, 0, 150, 151, 5, 111, 0, 0, 151, 152,
                5, 105, 0, 0, 152, 153, 5, 100, 0, 0, 153, 10, 1, 0, 0, 0, 154, 155, 5, 99, 0, 0, 155, 156, 5,
                111, 0, 0, 156, 157, 5, 110, 0, 0, 157, 158, 5, 115, 0, 0, 158, 159, 5, 116, 0, 0, 159, 12,
                1, 0, 0, 0, 160, 161, 5, 114, 0, 0, 161, 162, 5, 101, 0, 0, 162, 163, 5, 116, 0, 0, 163, 164,
                5, 117, 0, 0, 164, 165, 5, 114, 0, 0, 165, 166, 5, 110, 0, 0, 166, 14, 1, 0, 0, 0, 167, 168,
                5, 105, 0, 0, 168, 169, 5, 102, 0, 0, 169, 16, 1, 0, 0, 0, 170, 171, 5, 101, 0, 0, 171, 172,
                5, 108, 0, 0, 172, 173, 5, 115, 0, 0, 173, 174, 5, 101, 0, 0, 174, 18, 1, 0, 0, 0, 175, 176,
                5, 102, 0, 0, 176, 177, 5, 111, 0, 0, 177, 178, 5, 114, 0, 0, 178, 20, 1, 0, 0, 0, 179, 180,
                5, 119, 0, 0, 180, 181, 5, 104, 0, 0, 181, 182, 5, 105, 0, 0, 182, 183, 5, 108, 0, 0, 183, 184,
                5, 101, 0, 0, 184, 22, 1, 0, 0, 0, 185, 186, 5, 100, 0, 0, 186, 187, 5, 111, 0, 0, 187, 24, 1,
                0, 0, 0, 188, 189, 5, 98, 0, 0, 189, 190, 5, 114, 0, 0, 190, 191, 5, 101, 0, 0, 191, 192, 5,
                97, 0, 0, 192, 193, 5, 107, 0, 0, 193, 26, 1, 0, 0, 0, 194, 195, 5, 99, 0, 0, 195, 196, 5, 111,
                0, 0, 196, 197, 5, 110, 0, 0, 197, 198, 5, 116, 0, 0, 198, 199, 5, 105, 0, 0, 199, 200, 5, 110,
                0, 0, 200, 201, 5, 117, 0, 0, 201, 202, 5, 101, 0, 0, 202, 28, 1, 0, 0, 0, 203, 204, 5, 40, 0,
                0, 204, 30, 1, 0, 0, 0, 205, 206, 5, 41, 0, 0, 206, 32, 1, 0, 0, 0, 207, 208, 5, 91, 0, 0, 208,
                34, 1, 0, 0, 0, 209, 210, 5, 93, 0, 0, 210, 36, 1, 0, 0, 0, 211, 212, 5, 123, 0, 0, 212, 38, 1,
                0, 0, 0, 213, 214, 5, 125, 0, 0, 214, 40, 1, 0, 0, 0, 215, 216, 5, 44, 0, 0, 216, 42, 1, 0, 0,
                0, 217, 218, 5, 59, 0, 0, 218, 44, 1, 0, 0, 0, 219, 220, 5, 63, 0, 0, 220, 46, 1, 0, 0, 0, 221,
                222, 5, 58, 0, 0, 222, 48, 1, 0, 0, 0, 223, 224, 5, 45, 0, 0, 224, 50, 1, 0, 0, 0, 225, 226, 5,
                33, 0, 0, 226, 52, 1, 0, 0, 0, 227, 228, 5, 126, 0, 0, 228, 54, 1, 0, 0, 0, 229, 230, 5, 43, 0,
                0, 230, 56, 1, 0, 0, 0, 231, 232, 5, 42, 0, 0, 232, 58, 1, 0, 0, 0, 233, 234, 5, 47, 0, 0, 234,
                60, 1, 0, 0, 0, 235, 236, 5, 37, 0, 0, 236, 62, 1, 0, 0, 0, 237, 238, 5, 38, 0, 0, 238, 239, 5,
                38, 0, 0, 239, 64, 1, 0, 0, 0, 240, 241, 5, 124, 0, 0, 241, 242, 5, 124, 0, 0, 242, 66, 1, 0,
                0, 0, 243, 244, 5, 61, 0, 0, 244, 245, 5, 61, 0, 0, 245, 68, 1, 0, 0, 0, 246, 247, 5, 33, 0, 0,
                247, 248, 5, 61, 0, 0, 248, 70, 1, 0, 0, 0, 249, 250, 5, 60, 0, 0, 250, 72, 1, 0, 0, 0, 251, 252,
                5, 60, 0, 0, 252, 253, 5, 61, 0, 0, 253, 74, 1, 0, 0, 0, 254, 255, 5, 62, 0, 0, 255, 76, 1, 0,
                0, 0, 256, 257, 5, 62, 0, 0, 257, 258, 5, 61, 0, 0, 258, 78, 1, 0, 0, 0, 259, 261, 7, 1, 0, 0,
                260, 259, 1, 0, 0, 0, 261, 262, 1, 0, 0, 0, 262, 260, 1, 0, 0, 0, 262, 263, 1, 0, 0, 0, 263, 281,
                1, 0, 0, 0, 264, 265, 5, 48, 0, 0, 265, 266, 5, 120, 0, 0, 266, 268, 1, 0, 0, 0, 267, 269, 7,
                2, 0, 0, 268, 267, 1, 0, 0, 0, 269, 270, 1, 0, 0, 0, 270, 268, 1, 0, 0, 0, 270, 271, 1, 0, 0, 0,
                271, 281, 1, 0, 0, 0, 272, 273, 5, 48, 0, 0, 273, 274, 5, 88, 0, 0, 274, 276, 1, 0, 0, 0, 275,
                277, 7, 2, 0, 0, 276, 275, 1, 0, 0, 0, 277, 278, 1, 0, 0, 0, 278, 276, 1, 0, 0, 0, 278, 279, 1,
                0, 0, 0, 279, 281, 1, 0, 0, 0, 280, 260, 1, 0, 0, 0, 280, 264, 1, 0, 0, 0, 280, 272, 1, 0, 0, 0,
                281, 80, 1, 0, 0, 0, 282, 286, 7, 3, 0, 0, 283, 285, 7, 4, 0, 0, 284, 283, 1, 0, 0, 0, 285, 288,
                1, 0, 0, 0, 286, 284, 1, 0, 0, 0, 286, 287, 1, 0, 0, 0, 287, 82, 1, 0, 0, 0, 288, 286, 1, 0, 0,
                0, 289, 294, 5, 34, 0, 0, 290, 293, 3, 85, 42, 0, 291, 293, 9, 0, 0, 0, 292, 290, 1, 0, 0, 0,
                292, 291, 1, 0, 0, 0, 293, 296, 1, 0, 0, 0, 294, 295, 1, 0, 0, 0, 294, 292, 1, 0, 0, 0, 295, 297,
                1, 0, 0, 0, 296, 294, 1, 0, 0, 0, 297, 298, 5, 34, 0, 0, 298, 84, 1, 0, 0, 0, 299, 300, 5, 92,
                0, 0, 300, 304, 5, 34, 0, 0, 301, 302, 5, 92, 0, 0, 302, 304, 5, 92, 0, 0, 303, 299, 1, 0, 0,
                0, 303, 301, 1, 0, 0, 0, 304, 86, 1, 0, 0, 0, 305, 308, 3, 89, 44, 0, 306, 308, 3, 91, 45, 0,
                307, 305, 1, 0, 0, 0, 307, 306, 1, 0, 0, 0, 308, 88, 1, 0, 0, 0, 309, 311, 3, 93, 46, 0, 310,
                312, 3, 95, 47, 0, 311, 310, 1, 0, 0, 0, 311, 312, 1, 0, 0, 0, 312, 320, 1, 0, 0, 0, 313, 315,
                7, 1, 0, 0, 314, 313, 1, 0, 0, 0, 315, 316, 1, 0, 0, 0, 316, 314, 1, 0, 0, 0, 316, 317, 1, 0, 0,
                0, 317, 318, 1, 0, 0, 0, 318, 320, 3, 95, 47, 0, 319, 309, 1, 0, 0, 0, 319, 314, 1, 0, 0, 0, 320,
                90, 1, 0, 0, 0, 321, 322, 5, 48, 0, 0, 322, 323, 5, 120, 0, 0, 323, 324, 1, 0, 0, 0, 324, 325,
                3, 99, 49, 0, 325, 326, 3, 101, 50, 0, 326, 337, 1, 0, 0, 0, 327, 328, 5, 48, 0, 0, 328, 329,
                5, 120, 0, 0, 329, 331, 1, 0, 0, 0, 330, 332, 7, 2, 0, 0, 331, 330, 1, 0, 0, 0, 332, 333, 1, 0,
                0, 0, 333, 331, 1, 0, 0, 0, 333, 334, 1, 0, 0, 0, 334, 335, 1, 0, 0, 0, 335, 337, 3, 101, 50,
                0, 336, 321, 1, 0, 0, 0, 336, 327, 1, 0, 0, 0, 337, 92, 1, 0, 0, 0, 338, 340, 7, 1, 0, 0, 339,
                338, 1, 0, 0, 0, 340, 341, 1, 0, 0, 0, 341, 339, 1, 0, 0, 0, 341, 342, 1, 0, 0, 0, 342, 343, 1,
                0, 0, 0, 343, 345, 5, 46, 0, 0, 344, 346, 7, 1, 0, 0, 345, 344, 1, 0, 0, 0, 346, 347, 1, 0, 0,
                0, 347, 345, 1, 0, 0, 0, 347, 348, 1, 0, 0, 0, 348, 362, 1, 0, 0, 0, 349, 351, 7, 1, 0, 0, 350,
                349, 1, 0, 0, 0, 351, 352, 1, 0, 0, 0, 352, 350, 1, 0, 0, 0, 352, 353, 1, 0, 0, 0, 353, 354, 1,
                0, 0, 0, 354, 362, 5, 46, 0, 0, 355, 357, 5, 46, 0, 0, 356, 358, 7, 1, 0, 0, 357, 356, 1, 0, 0,
                0, 358, 359, 1, 0, 0, 0, 359, 357, 1, 0, 0, 0, 359, 360, 1, 0, 0, 0, 360, 362, 1, 0, 0, 0, 361,
                339, 1, 0, 0, 0, 361, 350, 1, 0, 0, 0, 361, 355, 1, 0, 0, 0, 362, 94, 1, 0, 0, 0, 363, 365, 5,
                101, 0, 0, 364, 366, 3, 97, 48, 0, 365, 364, 1, 0, 0, 0, 365, 366, 1, 0, 0, 0, 366, 368, 1, 0,
                0, 0, 367, 369, 7, 1, 0, 0, 368, 367, 1, 0, 0, 0, 369, 370, 1, 0, 0, 0, 370, 368, 1, 0, 0, 0, 370,
                371, 1, 0, 0, 0, 371, 382, 1, 0, 0, 0, 372, 374, 5, 69, 0, 0, 373, 375, 3, 97, 48, 0, 374, 373,
                1, 0, 0, 0, 374, 375, 1, 0, 0, 0, 375, 377, 1, 0, 0, 0, 376, 378, 7, 1, 0, 0, 377, 376, 1, 0, 0,
                0, 378, 379, 1, 0, 0, 0, 379, 377, 1, 0, 0, 0, 379, 380, 1, 0, 0, 0, 380, 382, 1, 0, 0, 0, 381,
                363, 1, 0, 0, 0, 381, 372, 1, 0, 0, 0, 382, 96, 1, 0, 0, 0, 383, 384, 7, 5, 0, 0, 384, 98, 1, 0,
                0, 0, 385, 387, 7, 2, 0, 0, 386, 385, 1, 0, 0, 0, 387, 388, 1, 0, 0, 0, 388, 386, 1, 0, 0, 0, 388,
                389, 1, 0, 0, 0, 389, 390, 1, 0, 0, 0, 390, 392, 5, 46, 0, 0, 391, 393, 7, 2, 0, 0, 392, 391,
                1, 0, 0, 0, 393, 394, 1, 0, 0, 0, 394, 392, 1, 0, 0, 0, 394, 395, 1, 0, 0, 0, 395, 409, 1, 0, 0,
                0, 396, 398, 7, 2, 0, 0, 397, 396, 1, 0, 0, 0, 398, 399, 1, 0, 0, 0, 399, 397, 1, 0, 0, 0, 399,
                400, 1, 0, 0, 0, 400, 401, 1, 0, 0, 0, 401, 409, 5, 46, 0, 0, 402, 404, 5, 46, 0, 0, 403, 405,
                7, 2, 0, 0, 404, 403, 1, 0, 0, 0, 405, 406, 1, 0, 0, 0, 406, 404, 1, 0, 0, 0, 406, 407, 1, 0, 0,
                0, 407, 409, 1, 0, 0, 0, 408, 386, 1, 0, 0, 0, 408, 397, 1, 0, 0, 0, 408, 402, 1, 0, 0, 0, 409,
                100, 1, 0, 0, 0, 410, 411, 5, 112, 0, 0, 411, 413, 3, 97, 48, 0, 412, 414, 7, 1, 0, 0, 413, 412,
                1, 0, 0, 0, 414, 415, 1, 0, 0, 0, 415, 413, 1, 0, 0, 0, 415, 416, 1, 0, 0, 0, 416, 425, 1, 0, 0,
                0, 417, 418, 5, 80, 0, 0, 418, 420, 3, 97, 48, 0, 419, 421, 7, 1, 0, 0, 420, 419, 1, 0, 0, 0,
                421, 422, 1, 0, 0, 0, 422, 420, 1, 0, 0, 0, 422, 423, 1, 0, 0, 0, 423, 425, 1, 0, 0, 0, 424, 410,
                1, 0, 0, 0, 424, 417, 1, 0, 0, 0, 425, 102, 1, 0, 0, 0, 39, 0, 109, 113, 117, 125, 130, 135,
                262, 270, 278, 280, 286, 292, 294, 303, 307, 311, 316, 319, 333, 336, 341, 347, 352, 359,
                361, 365, 370, 374, 379, 381, 388, 394, 399, 406, 408, 415, 422, 424, 1, 6, 0, 0
        };
        staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) /
                                                                                         sizeof(serializedATNSegment[0]));

        antlr4::atn::ATNDeserializer deserializer;
        staticData->atn = deserializer.deserialize(staticData->serializedATN);

        const size_t count = staticData->atn->getNumberOfDecisions();
        staticData->decisionToDFA.reserve(count);
        for (size_t i = 0; i < count; i++) {
            staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
        }
        lexLexerStaticData = staticData.release();
    }

}

Lex::Lex(CharStream *input) : Lexer(input) {
    Lex::initialize();
    _interpreter = new atn::LexerATNSimulator(this, *lexLexerStaticData->atn, lexLexerStaticData->decisionToDFA,
                                              lexLexerStaticData->sharedContextCache);
}

Lex::~Lex() {
    delete _interpreter;
}

std::string Lex::getGrammarFileName() const {
    return "Lex.g4";
}

const std::vector<std::string> &Lex::getRuleNames() const {
    return lexLexerStaticData->ruleNames;
}

const std::vector<std::string> &Lex::getChannelNames() const {
    return lexLexerStaticData->channelNames;
}

const std::vector<std::string> &Lex::getModeNames() const {
    return lexLexerStaticData->modeNames;
}

const dfa::Vocabulary &Lex::getVocabulary() const {
    return lexLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView Lex::getSerializedATN() const {
    return lexLexerStaticData->serializedATN;
}

const atn::ATN &Lex::getATN() const {
    return *lexLexerStaticData->atn;
}


void Lex::initialize() {
    ::antlr4::internal::call_once(lexLexerOnceFlag, lexLexerInitialize);
}
